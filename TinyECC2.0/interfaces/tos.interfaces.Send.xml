<?xml version="1.0" ?>
<interfacedef loc="44:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" nicename="tos.interfaces.Send" qname="Send">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>
 </short>
        <long>
 @author Phil Levis
 @author David Gay
 Revision:  $Revision: 1.5 $

 Defines global error codes for error_t in TinyOS.
</long>
      </documentation>
      <function command="" loc="64:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="send" provided="0" ref="0x40cc6ba8">
        <documentation loc="46:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short> 
 Send a packet with a data payload of &lt;tt&gt;len&lt;/tt&gt;.</short>
          <long> 
 Send a packet with a data payload of &lt;tt&gt;len&lt;/tt&gt;. To determine
 the maximum available size, use the Packet interface of the
 component providing Send. If send returns SUCCESS, then the
 component will signal the sendDone event in the future; if send
 returns an error, it will not signal sendDone.  Note that a
 component may accept a send request which it later finds it
 cannot satisfy; in this case, it will signal sendDone with an
 appropriate error code.

 @param   msg     the packet to send
 @param   len     the length of the packet payload
 @return          SUCCESS if the request was accepted and will issue
                  a sendDone event, EBUSY if the component cannot accept
                  the request now but will be able to later, FAIL
                  if the stack is in a state that cannot accept requests
                  (e.g., it's off).
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Send" qname="Send"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x402fde18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401992d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="64:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="msg" ref="0x40cc6868">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="64:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="len" ref="0x40cc6a48">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401992d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="114:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="getPayload" provided="0" ref="0x40cefea8">
        <documentation loc="104:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short>
 Return a pointer to a protocol's payload region in a packet.</short>
          <long>
 Return a pointer to a protocol's payload region in a packet.
 The length of this region is maxPayloadLength(). This command
 behaves similarly to &lt;tt&gt;Packet.getPayload&lt;/tt&gt; (minus the
 length parameter) and is included in this interface
 as a convenience.

 @param   msg    the packet
 @return         a pointer to the packet's payload
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Send" qname="Send"/>
        <type-function alignment="I:1" size="I:1">
          <type-pointer alignment="I:2" size="I:2">
            <type-void alignment="I:1" size="I:1"/>
          </type-pointer>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="114:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="msg" ref="0x40cefd30">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="101:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="maxPayloadLength" provided="0" ref="0x40cef7d0">
        <documentation loc="91:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short>
 Return the maximum payload length that this communication layer
 can provide.</short>
          <long>
 Return the maximum payload length that this communication layer
 can provide. This command behaves identically to
 &lt;tt&gt;Packet.maxPayloadLength&lt;/tt&gt; and is included in this
 interface as a convenience.

 @return  the maximum payload length
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Send" qname="Send"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x401992d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="78:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="cancel" provided="0" ref="0x40cf1828">
        <documentation loc="66:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short>
 Cancel a requested transmission.</short>
          <long>
 Cancel a requested transmission. Returns SUCCESS if the 
 transmission was cancelled properly (not sent in its
 entirety). Note that the component may not know
 if the send was successfully cancelled, if the radio is
 handling much of the logic; in this case, a component
 should be conservative and return an appropriate error code.

 @param   msg    the packet whose transmission should be cancelled
 @return         SUCCESS if the packet was successfully cancelled, FAIL
                 otherwise
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Send" qname="Send"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x402fde18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="78:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="msg" ref="0x40cf16d0">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="sendDone" provided="0" ref="0x40cef1c8">
        <documentation loc="80:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short> 
 Signaled in response to an accepted send request.</short>
          <long> 
 Signaled in response to an accepted send request. &lt;tt&gt;msg&lt;/tt&gt;
 is the sent buffer, and &lt;tt&gt;error&lt;/tt&gt; indicates whether the
 send was succesful, and if not, the cause of the failure.
 
 @param msg   the message which was requested to send
 @param error SUCCESS if it was transmitted successfully, FAIL if
              it was not, ECANCEL if it was cancelled via &lt;tt&gt;cancel&lt;/tt&gt;
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Send" qname="Send"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x402fde18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="89:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="msg" ref="0x40cf1e50">
            <type-pointer alignment="I:2" size="I:2">
              <type-tag alignment="I:1" size="I:122"><nx_struct-ref name="message_t" ref="0x406f1640"/>
                <typename><typedef-ref name="message_t" ref="0x406f03e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable loc="89:/opt/tinyos-2.0.2/tos/interfaces/Send.nc" name="error" ref="0x40cef068">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x402fde18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>